# yamllint disable rule:line-length

name: release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js for semantic-release
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets[format('GPG_PRIVATE_KEY_{0}', github.actor)] }}
          passphrase: ${{ secrets[format('GPG_PASSPHRASE_{0}', github.actor)] }}
          git_config_global: true
          git_user_signingkey: true

      - name: Install semantic-release
        run: |
          npm --global install semantic-release@24 \
            conventional-changelog-conventionalcommits \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/git \
            @semantic-release/github

      # these environment variables are set so that the next step can use them to
      # credit the actual doer for this release instead of crediting
      # semantic-release-bot
      - name: Update GITHUB_ENV and set git global config
        run: |
          echo "GIT_AUTHOR_EMAIL=$(git config --get user.email)" >> $GITHUB_ENV
          echo "GIT_AUTHOR_NAME=$(git config --get user.name)" >> $GITHUB_ENV
          echo "GIT_COMMITTER_EMAIL=$(git config --get user.email)" >> $GITHUB_ENV
          echo "GIT_COMMITTER_NAME=$(git config --get user.name)" >> $GITHUB_ENV
          echo "GIT_EMAIL=$(git config --get user.email)" >> $GITHUB_ENV
          echo "GIT_USERNAME=$(git config --get user.name)" >> $GITHUB_ENV
          git config --global commit.gpgSign true
          git config --global tag.forceSignAnnotated true

      - name: Perform Semantic Release
        if: success()
        env:
          # IF RELEASE NEEDS TO TRIGGER ANOTHER ACTION, CREATE A CUSTOM TOKEN
          # SEE https://github.com/semantic-release/github#github-authentication
          GITHUB_TOKEN: ${{ secrets[format('CUSTOM_GITHUB_TOKEN_{0}', github.actor)] }}
        run: npx semantic-release
